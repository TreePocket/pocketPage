(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{224:function(t,a,s){"use strict";s.r(a);var _=s(6),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h4",{attrs:{id:"_1-请你总结如何计算算法时间复杂度-空间复杂度。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-请你总结如何计算算法时间复杂度-空间复杂度。"}},[t._v("#")]),t._v(" 1.请你总结如何计算算法时间复杂度+空间复杂度。")]),t._v(" "),s("ul",[s("li",[t._v("时间复杂度： 大O复杂度表示法  T(n) = O(f(n))\n"),s("ul",[s("li",[t._v("(1) 只关注循环执行次数最多的一段代码")]),t._v(" "),s("li",[t._v("(2) 加法法则：总复杂度等于量级最大的那段代码的复杂度")]),t._v(" "),s("li",[t._v("(3) 乘法法则：嵌套代码的复杂度等于嵌套内外代码复杂度的乘积")]),t._v(" "),s("li",[t._v("(4) 有二分查找 则为O(logN)")]),t._v(" "),s("li",[t._v("(5) 系数可忽略 深度优先遍历(DFS) 和广度优先遍历(BFS) 时间复杂度：O(V+E) 空间复杂度：O(V)")])])]),t._v(" "),s("li",[t._v("空间复杂度 O(1):常数级  O(n): 一维数组  O(n^2): 二维数组")])]),t._v(" "),s("h4",{attrs:{id:"_2-什么是栈？javascript中有哪些栈的具体应用？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是栈？javascript中有哪些栈的具体应用？"}},[t._v("#")]),t._v(" 2.什么是栈？JavaScript中有哪些栈的具体应用？")]),t._v(" "),s("p",[t._v("栈是一种遵循先进后出的数据结构 栈有很多使用场景，如函数执行调用栈，表达式中缀转后缀，数组的push、pop方法就是运用栈的思想。")])])}),[],!1,null,null,null);a.default=r.exports}}]);